# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, ... }:
let
  home-manager = builtins.fetchTarball "https://github.com/nix-community/home-manager/archive/release-25.05.tar.gz";
  # sources = import ./npins;
in
{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
      (import "${home-manager}/nixos")
      # (sources.catppuccin + "/modules/home-manager")
];

# Config Home Manager
home-manager.useUserPackages = true;
home-manager.useGlobalPkgs = true;
home-manager.backupFileExtension = "backup";
home-manager.users.icdt = {
imports = [
./home.nix
# (sources.catppuccin + "modules/home-manager")
];
};

  # Bootloader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  # Enable Nix Flakes
  nix.settings.experimental-features = ["nix-command" "flakes"];

  networking.hostName = "nix-top"; # Define your hostname.
  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.

# Latest kernel packages
boot.kernelPackages = pkgs.linuxPackages_latest;

  # Configure network proxy if necessary
  # networking.proxy.default = "http://user:password@proxy:port/";
  # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

  # Enable networking
  networking.networkmanager.enable = true;

  # Set your time zone.
  time.timeZone = "America/Chicago";

  # Select internationalisation properties.
  i18n.defaultLocale = "en_US.UTF-8";

  i18n.extraLocaleSettings = {
    LC_ADDRESS = "en_US.UTF-8";
    LC_IDENTIFICATION = "en_US.UTF-8";
    LC_MEASUREMENT = "en_US.UTF-8";
    LC_MONETARY = "en_US.UTF-8";
    LC_NAME = "en_US.UTF-8";
    LC_NUMERIC = "en_US.UTF-8";
    LC_PAPER = "en_US.UTF-8";
    LC_TELEPHONE = "en_US.UTF-8";
    LC_TIME = "en_US.UTF-8";
  };

  # Configure keymap in X11
  services.xserver.xkb = {
    layout = "us";
    variant = "";
  };

  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.users.icdt = {
    isNormalUser = true;
    description = "Iced Tea";
    extraGroups = [ "networkmanager" "wheel" ];
    packages = with pkgs; [];
  };

  # Allow unfree packages
  nixpkgs.config.allowUnfree = true;

  # List packages installed in system profile. To search, run:
  # $ nix search wget
environment.systemPackages = with pkgs; [

  # System
  npins
  blueman
  bluez
  sony-headphones-client
  ldacbt
  git
  ripgrep
  pulseaudioFull
  pipewire

  # Editors
  vim
  emacs
  emacsPackages.gtk-variant

  # Terminal
  kitty
  git
  fastfetch
  wget
  htop
  cmatrix
  pipes
  zsh
  oh-my-zsh
  python313Packages.image-go-nord 
  astroterm
  findutils
  fd
  cava

  # Desktop Environment
  hyprland
  waybar
  hyprpaper
  rofi
  home-manager
  hyprcursor
  bibata-cursors
  catppuccin
  gtk2
  libsForQt5.full

  # Web
  qutebrowser
  firefox

  # Video Games
  steam
  parsec-bin

  # Other Applications
  pkgs.libsForQt5.dolphin
];

# Fonts
fonts = {
  enableDefaultPackages = true;
  packages = with pkgs; [
    nerd-fonts.fira-code
    nerd-fonts.iosevka
  ];

  fontconfig = {
    defaultFonts = {
      serif = ["Fira Code NF"];
      sansSerif = ["Fira Code NF"];
      monospace = ["Iosevka NF"];
    };
  };
};


  # Some programs need SUID wrappers, can be configured further or are
  # started in user sessions.
  # programs.mtr.enable = true;
  # programs.gnupg.agent = {
  #   enable = true;
  #   enableSSHSupport = true;
  # };

  # List services that you want to enable:

  # Enable the OpenSSH daemon.
  # services.openssh.enable = true;

  # Open ports in the firewall.
  # networking.firewall.allowedTCPPorts = [ ... ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # Or disable the firewall altogether.
  # networking.firewall.enable = false;

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. It‘s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "25.05"; # Did you read the comment?

# Enable Hyprland
programs.hyprland.enable = true;

#home.pointerCursor = {
#    gtk.enable = true;
#    # x11.enable = true;
#    package = pkgs.bibata-cursors;
#    name = "Bibata-Modern-Classic";
#    size = 16;
#  };

# Config Waybar
programs.waybar = {
  enable = true;
};

# Enable SDDM Login
services.xserver.enable = true;
services.xserver.displayManager.sddm.enable = true;

# Set ZSH as default
programs.zsh.enable = true;
users.extraUsers.icdt = {
  shell = pkgs.zsh;
};
programs.zsh.ohMyZsh.enable = true;
programs.zsh.ohMyZsh.theme = "af-magic";

# Setup Bluetooth
hardware.bluetooth.enable = true;
hardware.bluetooth.powerOnBoot = true;


}

